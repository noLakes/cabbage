/* CSS Reset Begins */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default padding */
ul[class],
ol[class] {
  padding: 0;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* Remove list styles on ul, ol elements with a class attribute */
ul[class],
ol[class] {
  list-style: none;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img {
  max-width: 100%;
  display: block;
}

/* Natural flow and rhythm in articles by default */
article > * + * {
  margin-top: 1em;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* CSS Reset Ends */
/*------------------------------------------------------------------*/

@font-face {
  font-family: 'Ubuntu-Light';
  src: url('./fonts/Ubuntu-Light.ttf');
  font-weight: 300;
}

@font-face {
  font-family: 'Ubuntu-LightItalic';
  src: url('./fonts/Ubuntu-LightItalic.ttf');
  font-weight: 300;
}

@font-face {
  font-family: 'Ubuntu';
  src: url('./fonts/Ubuntu-Regular.ttf');
  font-weight: 400;
}

@font-face {
  font-family: 'Ubunut-Italic';
  src: url('./fonts/Ubuntu-Italic.ttf');
  font-weight: 400;
}

@font-face {
  font-family: 'Ubuntu-Medium';
  src: url('./fonts/Ubuntu-Medium.ttf');
  font-weight: 500;
}

@font-face {
  font-family: 'Ubuntu-MediumItalic';
  src: url('./fonts/Ubuntu-MediumItalic.ttf');
  font-weight: 500;
}

@font-face {
  font-family: 'Ubuntu-Bold';
  src: url('./fonts/Ubuntu-Bold.ttf');
  font-weight: 700;
}

@font-face {
  font-family: 'Ubuntu-BoldItalic';
  src: url('./fonts/Ubuntu-BoldItalic.ttf');
  font-weight: 700;
}

:root {
  --bg: #607d8b;
  --bgl1: #78909c;
  --bgl2: #90a4ae; 
  --bgl3: #b0bec5;
  --bgl4: #cfd8dc;
  --bgl5: #eceff1;
  --bgd1: #546e7a;
  --bgd2: #455a64;
  --bgd3: #37474f;
  --bgd4: #263238; 
  --gr: #1adab4;
  --good: #a2d5a3;
  --bad: #d5a3a2e9;
  --caution: #f2e667bb;
}


* {
  font-family: Ubuntu, Helvetica, sans-serif, Arial;
}

body {
  background-color: var(--p4);
}

.main-container {
  display: flex;
  width: 100%;
  min-height: 100vh;
}

.nav-container {
  display: flex;
  flex-direction: column;
  width: 180px;
  max-width: 180px;
  min-width: 180px;
  padding: 0 1rem;
  background-color: var(--bgl1);
  font-size: 16px;
}

.logo {
  font-family: Ubuntu;
  font-style: italic;
  color: var(--good);
  padding-top: 1rem;
}

.static-links {
  margin-top: 0.5rem;
}

.static-links, .project-links {
  display: flex;
  flex-direction: column;
}

.project-item {
  list-style: disc;
  margin-left: 1.2rem;
}

.projects-label {
  color: var(--bgd5);
}

#home {
  margin-top: 0.5rem;
}

#upcoming { 
  margin-bottom: 0.5rem;
}

.time-link, .project-link {
  cursor: pointer;
}

.time-link:not(.active):hover, .project-link:not(.active):hover {
  color: var(--bgl4);
}

button.new-project, input[type=button], .nav-button, .content-button {
  border-radius: 5px;
  border: none;
  background-color: transparent; /*#5e9681a5*/
  color: var(--bgd5);
  padding: 0px 3px;
  width: max-content;
}

button.new-project {
  margin-top: 0.5rem;
}

.submit-project, .cancel-project {
  margin-top: 5px;
}

input[type=button].nav-button {
  background-color: var(--bgl3);
  font-size: 14px;
}

input[type=button].nav-button:hover {
  cursor: pointer;
  background-color: var(--bg);
}

input.submit-project {
  margin-right: 5px;
}

button.new-project:hover {
  cursor: pointer;
  color: var(--bgl4);
}

.content-button {
  color: var(--bg);
}

.content-button:hover {
  cursor: pointer;
  color: var(--bg);
}

.project-heading-container .content-button {
  color: black;
}

.project-heading-container .content-button:hover {
  background-color: transparent;
  color: var(--bg);
}

.project-heading-container .delete-project:hover {
  color: var(--bad);
}

input.project-name {
  background-color: transparent;
  border: 1px solid var(--bgl2);
  width: max-content;
  max-width: 90%;
  margin-top: 5px;
  padding: 0px 5px;
}

input.project-name:focus {
  outline: none;
  border-color: var(--bgl3);
  box-shadow: 0 0 3px var(--bgl3);
}

.active {
  color: var(--good);
}

.content-container {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  width: 100%;
  padding: 1rem;
  background-color: var(--bgl4);
}

.project-heading-container {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  width: auto;
}

a.edit-project {
  margin-left: 5px;
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: center;
}

.edit-project i {
  font-size: 13px;
}

a.edit-project:hover {
  cursor: pointer;
  color: var(--bg);
}

.edit-project-form {
  display: flex;
}

.content-input {
  background-color: transparent;
  border: 1px solid var(--bgl1);
  width: max-content;
  max-width: 50%;
  padding: 0px 5px;
}

.edit-project-name.content-input {
  font-size: 22px;
  font-weight: 700;
  width: auto;
  margin-right: 0.5rem;
}

.content-input:focus {
  outline: none;
  border-color: var(--bg);
  box-shadow: 0 0 3px var(--bg);
}

.new-task-button {
  margin-left: 1rem;
  background-color: transparent;
  height: 100%;
}

.new-task-button i {
  font-size: 13px;
}

.new-task-button:hover {
  background-color: transparent;
  color: var(--p0);
}

.new-task-button:disabled {
  color: rgba(0, 0, 0, 0.482);
}

.tasks-container {
  /*display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
  grid-auto-rows: 80px;
  gap: 10px 10px;*/
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  padding: 1rem 0;
}

.nothing {
  font-style: italic;
  color: rgba(0, 0, 0, 0.753);
}

.task-tile, .new-task-tile {
  display: flex;
  flex-direction: column;
  margin: 5px;
  width: 20%;
  max-width: 256px;
  height: 100%;
  max-height: 65px;
  padding: 0.6rem;
  border: 1px solid var(--bgl3);
  background-color: var(--bgl5);
  border-radius: 5px;
  transition: 0.2s;
  box-shadow: 0px 4px var(--bgl3);
}

.task-tile:hover {
  cursor: pointer;
  background-color: var(--bgl3);
  box-shadow: 0px 4px var(--bgl1);
}

.task-tile.complete {
  background-color: var(--good);
}

.task-tile i {
  margin-right: 3px;
}

h2 {
  font-size: 22px;
}

h3 {
  font-size: 15px;
  font-weight: 600;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.task-tile .info-container {
  display: flex;
  flex-direction: row;
}

.task-tile i {
  margin-right: 0.2rem;
}

.due-date, .list-counter {
  padding: 0 0.25rem;
  border-radius: 5px;
  width: max-content;
  font-size: 13px;
}

.due-date {
  padding: 0 4px;
  margin-right: 0.5rem;
}

.due-today {
  background-color: var(--cautionT);
}

input.due-today {
  border-color: var(--cautionT);
}

.overdue {
  background-color: var(--bad);
}

input.overdue {
  border-color: var(--bad);
}

.soon {
  background-color: var(--caution);
}

input.soon {
  border-color: var(--caution);
}

.tasks-complete {
  background-color: var(--good);
}

/* modal content begins */

.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

.modal-content {
  border: 1px solid var(--bgl3);
  background-color: var(--bgl5);
  box-shadow: 0px 4px var(--bgl3);
  margin: 15% auto; /* 15% from the top and centered */
  padding: 20px;
  border-radius: 5px;
  width: 512px; /* Could be more or less, depending on screen size */
}

.modal-content > div {
  width: 100%;
}

.modal-content .content-button {
  font-size: 14px;
}

.header-container {
  display: flex;
  margin-bottom: 1rem;
}

.left {
  display: flex;
  flex-direction: column;
  width: 75%;
}

.right {
  display: flex;
  flex-direction: column;
  width: 25%;
  padding-top: 5px;
  align-items: flex-end;
}

textarea.title, textarea.info {
  font-size: 20px;
  background-color: transparent;
  padding: 0;
  width: 100%;
  border: none;
  height: 28px;
  resize: none;
}

textarea.title:focus, textarea.info:focus{
  outline: none;
  border-color: var(--p1);
  box-shadow: 0 0 3px var(--p1);
}

textarea.info {
  font-size: 14px;
  height: auto;
}

.modal-sub-heading {
  font-size: 16px;
  font-weight: 600;
}

.project-tag {
  font-size: 14px;
}

.project-tag .project-link {
  color: var(--bgl1);
}

.project-tag .project-link:hover {
  color: var(--bg);
}

.due-container {
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
}

.due-controls {

}

input.due-input {
  border: 1px solid var(--p4);
  background-color: transparent;
  border-radius: 5px;
  margin-right: 0.5rem;
  font-size: 14px;
  width: max-content;
}

.check {
  display: flex;
}

.check *, .check-form * {
  font-size: 14px;
}

.check p.name.checked {
  text-decoration: line-through;
  color: rgba(0, 0, 0, 0.699);
}

input.name-input {
  background-color: transparent;
  border: 1px solid var(--p2);
  height: 20px;
}

input.name-input:focus {
  outline: none;
  border-color: var(--p1);
  box-shadow: 0 0 3px var(--p0);
}

 /* Customize the label (the container) */
 .checkBoxContainer {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 14px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.checkBoxContainer input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.checkBoxContainer:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.checkBoxContainer input:checked ~ .checkmark {
  background-color: var(--good);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkBoxContainer input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkBoxContainer .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

button.done {
  background-color: rgb(54, 255, 47);
} 

.footer-container {

}